apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "com.google.android.stardroid"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1304
        multiDexEnabled true
        versionName "1.8.0"
        buildConfigField 'String', 'GOOGLE_ANALYTICS_CODE', '""'
    }

    sourceSets {
        main.java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/javalite"
    }

    // Set the environment variables KSTOREPWD and KEYPWD to the keystore
    // and key passwords to generate a signed release..
    signingConfigs {
        release {
            storeFile file("stardroid-release-key.keystore")
            storePassword System.getenv("KSTOREPWD")
            keyPassword System.getenv("KEYPWD")
            keyAlias "stardroid"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            if (System.getenv("KSTOREPWD") != null) {
                signingConfig signingConfigs.release
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            if (file('no-checkin.properties').exists()) {
                Properties properties = new Properties()
                // Sky Map devs should create this file with the Google Analytics key
                properties.load(project.file('no-checkin.properties').newDataInputStream())
                def analyticsKey = properties.getProperty('analytics-key')
                buildConfigField 'String', 'GOOGLE_ANALYTICS_CODE', analyticsKey
            }
        }
    }

    lintOptions {
        // Lint complains because of missing translations.
        // TODO(jontayler): fix the missing translations.
        abortOnError false
    }
    buildToolsVersion = '28.0.3'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.protobuf:protobuf-lite:3.0.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.robolectric:robolectric:3.0'
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'org.easymock:easymock:2.5.2'
}
protobuf{
    protoc{
        artifact = 'com.google.protobuf.protoc:3.0.0'
    }
    plugins {
        javalite {
            artifact = 'com.google:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}


